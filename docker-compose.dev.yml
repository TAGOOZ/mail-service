services:
  # MongoDB database for development
  mongodb-dev:
    image: ${MONGODB_IMAGE}
    container_name: ${MONGODB_CONTAINER_NAME}-dev
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    ports:
      - '127.0.0.1:${MONGODB_PORT}:27017' # Bind to localhost only for security
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - tempmail-dev-network

  # Redis cache for development
  redis-dev:
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER_NAME}-dev
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '127.0.0.1:${REDIS_PORT}:6379' # Bind to localhost only for security
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - tempmail-dev-network

  # Backend API for development
  backend-dev:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
      args:
        NODE_ENV: ${NODE_ENV}
    container_name: ${BACKEND_CONTAINER_NAME}-dev
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${BACKEND_PORT}
      MONGODB_URI: mongodb://${MONGODB_ROOT_USERNAME}:${MONGODB_ROOT_PASSWORD}@mongodb-dev:27017/${MONGODB_DATABASE}?authSource=admin
      REDIS_URL: redis://redis-dev:6379
      MAIL_DOMAIN: ${MAIL_DOMAIN}
      MAIL_PORT: ${MAIL_PORT}
      # SMTP settings for outgoing emails (send to MailHog for testing)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      # MailHog forwarding settings (for development visualization)
      MAILHOG_HOST: ${MAILHOG_HOST}
      MAILHOG_PORT: ${MAILHOG_PORT}
      # CORS settings
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: DEBUG
      # Security settings
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      SESSION_SECRET: ${SESSION_SECRET}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
      CORS_ADDITIONAL_ORIGINS: ${CORS_ADDITIONAL_ORIGINS}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS}
      CORS_METHODS: ${CORS_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
      CORS_EXPOSED_HEADERS: ${CORS_EXPOSED_HEADERS}
      # Rate limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS}
      # Enable polling for file watching in Docker
      CHOKIDAR_USEPOLLING: true
      CHOKIDAR_INTERVAL: 1000
    ports:
      - '127.0.0.1:${BACKEND_PORT}:${BACKEND_PORT}' # Bind to localhost only, nginx will proxy
      - '127.0.0.1:${MAIL_PORT}:${MAIL_PORT}' # Internal mail processing port (accessed by mailserver)
    depends_on:
      - mongodb-dev
      - redis-dev
    networks:
      - tempmail-dev-network
    volumes:
      # Source code hot reload
      - ./backend/src:/app/backend/src
      - ./shared/src:/app/shared/src
      - ./backend/package.json:/app/backend/package.json
      - ./shared/package.json:/app/shared/package.json
      - ./tsconfig.json:/app/tsconfig.json
      # Logs directory
      - ./logs:/app/logs
      # Exclude node_modules to avoid permission issues
      - /app/node_modules
      - /app/backend/node_modules
      - /app/shared/node_modules

  # Frontend for development
  frontend-dev:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
        VITE_WS_URL: ${VITE_WS_URL}
        VITE_DOMAIN: ${VITE_DOMAIN}
    container_name: tempmail-frontend-dev
    restart: unless-stopped
    env_file:
      - .env
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
      VITE_WS_URL: ${VITE_WS_URL}
      VITE_DOMAIN: ${VITE_DOMAIN}
      # Security settings
      VITE_LOG_LEVEL: DEBUG
      # Enable polling for file watching in Docker
      CHOKIDAR_USEPOLLING: true
      CHOKIDAR_INTERVAL: 1000
      # Vite specific settings for hot reload
      VITE_HOST: 0.0.0.0
      VITE_PORT: 3000
    ports:
      - '127.0.0.1:${FRONTEND_PORT}:${FRONTEND_PORT}'
    depends_on:
      - backend-dev
    networks:
      - tempmail-dev-network
    volumes:
      # Source code hot reload
      - ./frontend/src:/app/frontend/src
      - ./shared/src:/app/shared/src
      - ./frontend/package.json:/app/frontend/package.json
      - ./shared/package.json:/app/shared/package.json
      - ./tsconfig.json:/app/tsconfig.json
      # Frontend specific files
      - ./frontend/index.html:/app/frontend/index.html
      - ./frontend/vite.config.ts:/app/frontend/vite.config.ts
      - ./frontend/tailwind.config.js:/app/frontend/tailwind.config.js
      - ./frontend/postcss.config.js:/app/frontend/postcss.config.js
      # Exclude node_modules to avoid permission issues
      - /app/node_modules
      - /app/frontend/node_modules
      - /app/shared/node_modules

  # MailHog for email visualization and testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: tempmail-mailhog-dev
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '1025:1025' # SMTP server (for outgoing email testing)
      - '8025:8025' # Web UI
    networks:
      - tempmail-dev-network

  # Simple mail forwarder (forwards port 25 to backend:2525)
  mail-forwarder:
    image: alpine:latest
    container_name: tempmail-forwarder-dev
    restart: unless-stopped
    env_file:
      - .env
    command: >
      sh -c "
        apk add --no-cache socat &&
        echo 'Starting mail forwarder: 25 -> backend-dev:2525' &&
        socat TCP-LISTEN:25,fork,reuseaddr TCP:backend-dev:2525
      "
    ports:
      - '25:25' # Standard SMTP port for external emails
    depends_on:
      - backend-dev
    networks:
      - tempmail-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  tempmail-dev-network:
    driver: bridge
