version: '3.8'

services:
  # MongoDB database for development
  mongodb-dev:
    image: ${MONGODB_IMAGE}
    container_name: ${MONGODB_CONTAINER_NAME}-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    ports:
      - '${MONGODB_PORT}:27017'
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - tempmail-dev-network

  # Redis cache for development
  redis-dev:
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER_NAME}-dev
    restart: unless-stopped
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - tempmail-dev-network

  # Backend API for development
  backend-dev:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: tempmail-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb-dev:27017/tempmail_dev?authSource=admin
      REDIS_URL: redis://redis-dev:6379
      MAIL_DOMAIN: nnu.edu.kg
      MAIL_PORT: 2525
      # SMTP settings for outgoing emails (send to MailHog for testing)
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      # MailHog forwarding settings (for development visualization)
      MAILHOG_HOST: mailhog
      MAILHOG_PORT: 1025
      # CORS settings
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: DEBUG
      # Enable polling for file watching in Docker
      CHOKIDAR_USEPOLLING: true
      CHOKIDAR_INTERVAL: 1000
    ports:
      - '3001:3001'
      - '127.0.0.1:2525:2525' # Internal mail processing port
    depends_on:
      - mongodb-dev
      - redis-dev
    networks:
      - tempmail-dev-network
    volumes:
      # Source code hot reload
      - ./backend/src:/app/backend/src
      - ./shared/src:/app/shared/src
      - ./backend/package.json:/app/backend/package.json
      - ./shared/package.json:/app/shared/package.json
      - ./tsconfig.json:/app/tsconfig.json
      # Logs directory
      - ./logs:/app/logs
      # Exclude node_modules to avoid permission issues
      - /app/node_modules
      - /app/backend/node_modules
      - /app/shared/node_modules

  # Frontend for development
  frontend-dev:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
      args:
        VITE_API_BASE_URL: http://localhost:3001/api
        VITE_WS_URL: http://localhost:3001
        VITE_DOMAIN: 127.0.0.1
    container_name: tempmail-frontend-dev
    restart: unless-stopped
    environment:
      # Enable polling for file watching in Docker
      CHOKIDAR_USEPOLLING: true
      CHOKIDAR_INTERVAL: 1000
      # Vite specific settings for hot reload
      VITE_HOST: 0.0.0.0
      VITE_PORT: 3000
    ports:
      - '3000:3000'
    depends_on:
      - backend-dev
    networks:
      - tempmail-dev-network
    volumes:
      # Source code hot reload
      - ./frontend/src:/app/frontend/src
      - ./shared/src:/app/shared/src
      - ./frontend/package.json:/app/frontend/package.json
      - ./shared/package.json:/app/shared/package.json
      - ./tsconfig.json:/app/tsconfig.json
      # Frontend specific files
      - ./frontend/index.html:/app/frontend/index.html
      - ./frontend/vite.config.ts:/app/frontend/vite.config.ts
      - ./frontend/tailwind.config.js:/app/frontend/tailwind.config.js
      - ./frontend/postcss.config.js:/app/frontend/postcss.config.js
      # Exclude node_modules to avoid permission issues
      - /app/node_modules
      - /app/frontend/node_modules
      - /app/shared/node_modules

  # MailHog for email visualization and testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: tempmail-mailhog-dev
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP server (for outgoing email testing)
      - '8025:8025' # Web UI
    networks:
      - tempmail-dev-network

  # Simple mail forwarder (forwards port 25 to backend:2525)
  mail-forwarder:
    image: alpine:latest
    container_name: tempmail-forwarder-dev
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache socat &&
        echo 'Starting mail forwarder: 25 -> backend-dev:2525' &&
        socat TCP-LISTEN:25,fork,reuseaddr TCP:backend-dev:2525
      "
    ports:
      - '25:25' # Standard SMTP port for external emails
    depends_on:
      - backend-dev
    networks:
      - tempmail-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  tempmail-dev-network:
    driver: bridge
